---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: loki
  namespace: flux-system
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 6.30.1
  url: oci://ghcr.io/grafana/helm-charts/loki
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: observability
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: loki
  install:
    crds: Create
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: Create
    remediation:
      retries: 3
  values:
    deploymentMode: SingleBinary
    loki:
      auth_enabled: false
      analytics:
        reporting_enabled: false
      server:
        log_level: info
      commonConfig:
        replication_factor: 1
      compactor:
        working_directory: /var/loki/compactor/retention # This might also need to be an S3 path eventually, but let's start here.
        delete_request_store: s3
        retention_enabled: true
      ingester:
        chunk_encoding: snappy
      limits_config:
        retention_period: 14d
      storage:
        type: s3
        s3:
          endpoint: http://192.168.8.161:9000
          bucket_name: loki-data-7f3d9a # Using singular form
          access_key_id: dummy # Will be overridden by env var
          secret_access_key: dummy # Will be overridden by env var
          s3forcepathstyle: true
          insecure: true
      schemaConfig:
        configs:
          - from: "2024-04-01" # quote
            store: tsdb
            object_store: s3 # Changed from filesystem
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      structuredConfig:
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://alertmanager-operated.observability.svc.cluster.local:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /rules/fake
    singleBinary:
      replicas: 1
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-credentials-secret
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials-secret
              key: AWS_SECRET_ACCESS_KEY
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: "2"
          memory: 2Gi
      # persistence: # Removed filesystem persistence
      #   enabled: true
      #   storageClass: openebs-hostpath
      #   size: 50Gi
    gateway:
      replicas: 0
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0
    chunksCache:
      enabled: true
    resultsCache:
      enabled: true
    lokiCanary:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          cpu: 100m
          memory: 128Mi
    test:
      enabled: false
    sidecar:
      image:
        repository: ghcr.io/home-operations/k8s-sidecar
        tag: 1.30.3@sha256:39cca7abcad8f1621b9462d95f7d0e60301b92fcb0ff4de0ad4561859011cddf
      rules:
        searchNamespace: ALL
