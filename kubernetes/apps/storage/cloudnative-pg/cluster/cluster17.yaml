---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: &current postgres-v17-3
  namespace: storage
spec:
  instances: 3
  primaryUpdateStrategy: unsupervised
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  enableSuperuserAccess: true
  superuserSecret:
    name: cloudnative-pg-secret
  affinity:
    nodeSelector:
      node-role.kubernetes.io/worker: ""
  postgresql:
    parameters:
      max_connections: "800"
      shared_buffers: "512MB"
  # minor upgrades or recovery from existing s3 backups
  bootstrap:
    recovery:
      source: &previousCluster postgres-v17-2
  # when doing major upgrade and backup doesn't exist
  # bootstrap:
  #   initdb:
  #     import:
  #       type: monolith
  #       databases: ["*"]
  #       roles: ["*"]
  #       source:
  #         externalCluster: &previousCluster postgres-v16-v3
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: &s3 s3://pgbackup/
      endpointURL: &endpoint http://192.168.8.161:9000
      serverName: *current
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cloudnative-pg-secret
          key: AWS_SECRET_ACCESS_KEY
  monitoring:
    enablePodMonitor: true
  externalClusters:
    # recovering from s3
    - name: *previousCluster
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: *s3
        endpointURL: *endpoint
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: AWS_ACCESS_KEY_ID
          secretAccessKey:
            name: cloudnative-pg-secret
            key: AWS_SECRET_ACCESS_KEY
    # when directly doing direct upgrades and upgrading when current
    # postgres is already running
    # - name: *previousCluster
    #   connectionParameters:
    #     host: postgres-lb.database.svc.cluster.local
    #     user: postgres
    #     dbname: postgres
    #     sslmode: require
    #   password:
    #     name: postgres-superuser
    #     key: password
