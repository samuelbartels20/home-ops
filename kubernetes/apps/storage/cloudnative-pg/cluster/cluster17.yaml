---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: storage
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:17.2
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "400"
      shared_buffers: 256MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 500m
    limits:
      memory: 4Gi
  monitoring:
    enablePodMonitor: true

  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://pgbackup/
      endpointURL: http://192.168.8.161:9000
      # endpointURL: https://${CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres17-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cloudnative-pg-secret
          key: AWS_SECRET_ACCESS_KEY

  externalClusters:
    - name: clusterBackup
      barmanObjectStore:
        destinationPath: s3://pgbackup
        endpointURL: http://192.168.8.161:9000
        serverName: &previouscluster postgres17-v2
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: AWS_ACCESS_KEY_ID
          secretAccessKey:
            name: cloudnative-pg-secret
            key: AWS_SECRET_ACCESS_KEY
