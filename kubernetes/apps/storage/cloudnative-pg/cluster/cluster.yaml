---
# yaml-language-server: $schema=https://kochhaus-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-v17
  annotations:
    kyverno.io/ignore: "true"
spec:
  imageName:  ghcr.io/cloudnative-pg/postgresql:17.2
  instances: 3
  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    synchronous:
      method: any
      number: 1
    parameters:
      max_connections: "400"
      shared_buffers: 256MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
    limits:
      memory: 640Mi
  monitoring:
    enablePodMonitor: true
    # Ref: https://github.com/cloudnative-pg/cloudnative-pg/issues/2501
    podMonitorMetricRelabelings:
      - { sourceLabels: ["cluster"], targetLabel: cnpg_cluster, action: replace }
      - { regex: cluster, action: labeldrop }
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://pgbackup/
      endpointURL: http://192.168.8.161:9000
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres-v17-v2
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cloudnative-pg-secret
          key: AWS_SECRET_ACCESS_KEY

  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: clusterBackup
      barmanObjectStore:
        destinationPath: s3://pgbackup/
        endpointURL: http://192.168.8.161:9000
        serverName: &previouscluster postgres-v2
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: AWS_ACCESS_KEY_ID
          secretAccessKey:
            name: cloudnative-pg-secret
            key: AWS_SECRET_ACCESS_KEY

