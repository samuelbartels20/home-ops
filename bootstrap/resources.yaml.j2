{% for namespace in ["external-secrets", "flux-system", "network"] %}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
{% endfor %}
---
# onepassword secret
apiVersion: v1
kind: Secret
metadata:
  name: onepassword-secret
  namespace: external-secrets
stringData:
  token: op://K8s/1password-token/password
  1password-credentials.json: op://K8s/1password-json/1password-credentials.json

---
# databases/cloudnative-pg/operator/externalsecret.yaml
apiVersion: v1
kind: Secret
metadata:
    name: pgadmin-secret
    namespace: databases
    labels:
        cnpg.io/reload: "true"
data:
    password: op://K8s/POSTGRES_SUPER_PASS/POSTGRES_SUPER_PASS
    username: op://K8s/POSTGRES_SUPER_USER/POSTGRES_SUPER_USER
    aws-access-key-id: op://K8s/AWS_ACCESS_KEY_ID/AWS_ACCESS_KEY_ID
    aws-secret-access-key: op://K8s/AWS_SECRET_ACCESS_KEY/AWS_SECRET_ACCESS_KEY

---
apiVersion: v1
kind: Secret
metadata:
  name: sops-age
  namespace: flux-system
stringData:
  age.agekey: op://kubernetes/sops/SOPS_PRIVATE_KEY
---
apiVersion: v1
kind: Secret
metadata:
  name: devbu-io-tls
  namespace: kube-system
  annotations:
    cert-manager.io/alt-names: '*.devbu.io,devbu.io'
    cert-manager.io/certificate-name: devbu-io
    cert-manager.io/common-name: devbu.io
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
  labels:
    controller.cert-manager.io/fao: "true"
type: kubernetes.io/tls
data:
  tls.crt: op://kubernetes/devbu-io-tls/tls.crt
  tls.key: op://kubernetes/devbu-io-tls/tls.key
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-tunnel-id-secret
  namespace: network
stringData:
  CLOUDFLARE_TUNNEL_ID: op://kubernetes/cloudflare/CLOUDFLARE_TUNNEL_ID
